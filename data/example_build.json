{"dataset_1": {"name": "Dataset 1", "type": {"_class": "datasets", "name": "Dataset"}, "arguments": {"dataset": {"value": "\"\"\"\nNote : Don't change dataset id.\n\nAll the required packages have been imported with their standard namespaces.\n\ntensorflow as tf\nkeras as keras\npandas as pd\nnumpy as np\n\nfrom sklearn.model_selection , train_test_split\n\"\"\"\n\n\n#dataset id=dataset_1\nclass Dataset:\n    \"\"\"\n    Dataset will be used in training \n\n    The dataset object needs to have following attributes\n\n    train_x : np.ndarray -> Training features\n    train_y : np.ndarray -> Training labels \n    test_x : np.ndarray -> Testing features\n    test_y : np.ndarray -> Testing labels\n\n    validate : bool -> Weather use validation data or not\n\n    batch_size : int -> Batch size\n    epochs : int -> Number of epochs\n    batches : int -> Number of batches ( Will be calculated automatically )\n    \"\"\"\n    train_x = None\n    test_x = None\n    train_y = None\n    test_y = None\n\n    validate = True\n\n    def __init__(self) -> None:\n        \"\"\"\n        Load dataset and set required variables.\n        \"\"\"\n\n        images = glob(\"C:\\\\workspace\\\\tensorflow-gui\\\\data\\\\datasets\\\\bfsiw\\\\leedsbutterfly\\\\images\\\\*\")\n        labels = glob(\"C:\\\\workspace\\\\tensorflow-gui\\\\data\\\\datasets\\\\bfsiw\\\\leedsbutterfly\\\\segmentations\\\\*\")\n\n    \n        self.train_x = np.zeros((len(images),224,224,3)).astype(np.float32)\n        self.train_y = np.zeros((len(labels),224,224,3)).astype(np.float32)\n\n        def get_image(args):\n            index,path,array = args\n            im = cv2.imread(path,)[:,:,::-1]\n            im = cv2.resize(im,(224,224),interpolation=cv2.INTER_AREA)\n            array[index] = im\n            return 1\n\n\n        with ThreadPoolExecutor(max_workers=32) as executor:\n            res = executor.map(get_image,[ ( i,path,self.train_x ) for i,path in enumerate(images)])\n            print (sum(list(res)))\n            \n        with ThreadPoolExecutor(max_workers=32) as executor:\n            res = executor.map(get_image,[ ( i,path,self.train_y ) for i,path in enumerate(labels)])\n\n        self.train_y = self.train_y.mean(axis=-1) / 255\n        test_idx = np.random.randint(0,len(self.train_x),size=32)\n        \n        self.test_x = self.train_x[test_idx]\n        self.test_y = self.train_y[test_idx]\n\n        collect()\n        \n# Do not change the anything.\ndataset_1 = Dataset()\n#end-dataset id=dataset_1", "type": "dataset", "render": "dataset"}}, "id": "dataset_1", "pos": {"x": 325, "y": 237, "offsetX": 43, "offsetY": 23}, "connections": {"inbound": [], "outbound": ["input_1"]}, "width": 90}, "input_1": {"name": "Input 1", "type": {"name": "Input", "_class": "layers"}, "arguments": {"shape": {"value": "( 224 ,224, 3 )", "type": "str", "render": "text", "options": "shape"}, "batch_size": {"value": "None", "type": "str", "render": "text", "options": "size"}, "name": {"value": "None", "type": "str", "render": "text", "options": "name"}, "dtype": {"value": "None", "type": "str", "render": "text", "options": "dtype"}, "sparse": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "tensor": {"value": "None", "type": "str", "render": "text", "options": "tensor"}, "ragged": {"value": "False", "type": "str", "render": "list", "options": "bool"}}, "doc": "https://keras.io/api/layers/core_layers/input", "id": "input_1", "pos": {"x": 333, "y": 303, "offsetX": 33, "offsetY": 23}, "connections": {"inbound": ["dataset_1"], "outbound": ["conv_block_1"]}, "width": 70}, "node_1": {"name": "Conv Block Node", "type": {"name": "Custom", "_class": "node"}, "arguments": {"code": {"value": "def conv_2d_block(\n    inbound:list=[],\n    filters:int=8,\n    activation:str=\"swish\"\n  )->None:\n  \n  x = layers.Conv2D(filters,kernel_size=3, padding=\"same\")(inbound)\n  x = layers.BatchNormalization()(x)\n  x = layers.Activation(activation)(x)\n\n  x = layers.Conv2D(filters,kernel_size=3,strides=2,padding=\"same\")(x)\n  x = layers.BatchNormalization()(x)\n  x = layers.Activation(activation)(x)\n\n  x = layers.Dropout(0.1)(x)\n\n  return x  \n", "type": "code", "render": "code"}}, "id": "node_1", "pos": {"x": 866, "y": 206, "offsetX": 28, "offsetY": 23}, "connections": {"inbound": [], "outbound": []}, "width": 150, "_id": "Conv Block", "index": 0}, "conv_block_1": {"name": "Conv Block 1", "type": {"name": "Node", "_class": "conv_2d_block"}, "arguments": {"filters": {"value": 8, "type": "int", "render": "text", "options": null}, "activation": {"value": "swish", "type": "str", "render": "text", "options": null}}, "id": "conv_block_1", "pos": {"x": 308, "y": 392, "offsetX": 58, "offsetY": 23}, "connections": {"inbound": ["input_1"], "outbound": ["conv_block_2", "convtranspose_block_4"]}, "width": 120}, "conv_block_2": {"name": "Conv Block 2", "type": {"name": "Node", "_class": "conv_2d_block"}, "arguments": {"filters": {"value": "16", "type": "int", "render": "text", "options": null}, "activation": {"value": "swish", "type": "str", "render": "text", "options": null}}, "id": "conv_block_2", "pos": {"x": 493, "y": 533, "offsetX": 58, "offsetY": 23}, "connections": {"inbound": ["conv_block_1"], "outbound": ["conv_block_3", "convtranspose_block_3"]}, "width": 120}, "conv_block_3": {"name": "Conv Block 3", "type": {"name": "Node", "_class": "conv_2d_block"}, "arguments": {"filters": {"value": "32", "type": "int", "render": "text", "options": null}, "activation": {"value": "swish", "type": "str", "render": "text", "options": null}}, "id": "conv_block_3", "pos": {"x": 683, "y": 653, "offsetX": 58, "offsetY": 23}, "connections": {"inbound": ["conv_block_2"], "outbound": ["conv_block_4", "convtranspose_block_2"]}, "width": 120}, "conv_block_4": {"name": "Conv Block 4", "type": {"name": "Node", "_class": "conv_2d_block"}, "arguments": {"filters": {"value": "64", "type": "int", "render": "text", "options": null}, "activation": {"value": "swish", "type": "str", "render": "text", "options": null}}, "id": "conv_block_4", "pos": {"x": 863, "y": 759, "offsetX": 58, "offsetY": 23}, "connections": {"inbound": ["conv_block_3"], "outbound": ["dense_1", "convtranspose_block_1"]}, "width": 120}, "node_2": {"name": "ConvTranspose Block Node", "type": {"name": "Custom", "_class": "node"}, "arguments": {"code": {"value": "def convt_2d_block(\n    inbound:list=[],\n    filters:int=8,\n    activation:str=\"swish\"\n  )->None:\n\n  x = layers.Concatenate()(inbound)  \n  x = layers.Conv2DTranspose(filters,kernel_size=3,padding=\"same\")(x)\n  x = layers.BatchNormalization()(x)\n  x = layers.Activation(activation)(x)\n\n  x = layers.Conv2DTranspose(filters,kernel_size=3,strides=2,padding=\"same\")(x)\n  x = layers.BatchNormalization()(x)\n  x = layers.Activation(activation)(x)\n\n  x = layers.Dropout(0.1)(x)\n\n  return x  \n", "type": "code", "render": "code"}}, "id": "node_2", "pos": {"x": 912, "y": 283, "offsetX": 28, "offsetY": 23}, "connections": {"inbound": [], "outbound": []}, "width": 240, "_id": "ConvTranspose Block", "index": 0}, "convtranspose_block_1": {"name": "ConvTranspose Block 1", "type": {"name": "Node", "_class": "convt_2d_block"}, "arguments": {"filters": {"value": "64", "type": "int", "render": "text", "options": null}, "activation": {"value": "swish", "type": "str", "render": "text", "options": null}}, "id": "convtranspose_block_1", "pos": {"x": 829, "y": 943, "offsetX": 103, "offsetY": 23}, "connections": {"inbound": ["dense_1", "conv_block_4"], "outbound": ["convtranspose_block_2"]}, "width": 210}, "convtranspose_block_2": {"name": "ConvTranspose Block 2", "type": {"name": "Node", "_class": "convt_2d_block"}, "arguments": {"filters": {"value": "32", "type": "int", "render": "text", "options": null}, "activation": {"value": "swish", "type": "str", "render": "text", "options": null}}, "id": "convtranspose_block_2", "pos": {"x": 638, "y": 1021, "offsetX": 103, "offsetY": 23}, "connections": {"inbound": ["convtranspose_block_1", "conv_block_3"], "outbound": ["convtranspose_block_3"]}, "width": 210}, "convtranspose_block_3": {"name": "ConvTranspose Block 3", "type": {"name": "Node", "_class": "convt_2d_block"}, "arguments": {"filters": {"value": "16", "type": "int", "render": "text", "options": null}, "activation": {"value": "swish", "type": "str", "render": "text", "options": null}}, "id": "convtranspose_block_3", "pos": {"x": 447, "y": 1151, "offsetX": 103, "offsetY": 23}, "connections": {"inbound": ["conv_block_2", "convtranspose_block_2"], "outbound": ["convtranspose_block_4"]}, "width": 210}, "convtranspose_block_4": {"name": "ConvTranspose Block 4", "type": {"name": "Node", "_class": "convt_2d_block"}, "arguments": {"filters": {"value": 8, "type": "int", "render": "text", "options": null}, "activation": {"value": "swish", "type": "str", "render": "text", "options": null}}, "id": "convtranspose_block_4", "pos": {"x": 265, "y": 1268, "offsetX": 103, "offsetY": 23}, "connections": {"inbound": ["conv_block_1", "convtranspose_block_3"], "outbound": ["conv2d_1"]}, "width": 210}, "dense_1": {"name": "Dense 1", "type": {"name": "Dense", "_class": "layers"}, "arguments": {"units": {"value": "128", "type": "str", "render": "text", "options": "units"}, "activation": {"value": "sigmoid", "type": "str", "render": "list", "options": "activation"}, "use_bias": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "kernel_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "bias_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "activity_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "kernel_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}, "bias_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}}, "doc": "https://keras.io/api/layers/core_layers/dense", "id": "dense_1", "pos": {"x": 1038, "y": 851, "offsetX": 33, "offsetY": 23}, "connections": {"inbound": ["conv_block_4"], "outbound": ["convtranspose_block_1"]}, "width": 70}, "conv2d_1": {"name": "Conv2D 1", "type": {"name": "Conv2D", "_class": "layers"}, "arguments": {"filters": {"value": "1", "type": "str", "render": "text", "options": "filters"}, "kernel_size": {"value": "3", "type": "str", "render": "text", "options": "size"}, "padding": {"value": "same", "type": "str", "render": "list", "options": "padding"}, "strides": {"value": "(1, 1)", "type": "str", "render": "text", "options": "strides"}, "data_format": {"value": "None", "type": "str", "render": "text", "options": "format"}, "dilation_rate": {"value": "(1, 1)", "type": "str", "render": "text", "options": "rate"}, "groups": {"value": "1", "type": "str", "render": "text", "options": "groups"}, "activation": {"value": "None", "type": "str", "render": "list", "options": "activation"}, "use_bias": {"value": "True", "type": "str", "render": "list", "options": "bool"}, "kernel_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "bias_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "activity_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "kernel_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}, "bias_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}}, "doc": "https://keras.io/api/layers/convolution_layers/convolution2d", "id": "conv2d_1", "pos": {"x": 328, "y": 1331, "offsetX": 38, "offsetY": 23}, "connections": {"inbound": ["convtranspose_block_4"], "outbound": ["batchnormalization_1"]}, "width": 80}, "batchnormalization_1": {"name": "BatchNormalization 1", "type": {"name": "BatchNormalization", "_class": "layers"}, "arguments": {"momentum": {"value": "0.99", "type": "str", "render": "text", "options": "momentum"}, "epsilon": {"value": "0.001", "type": "str", "render": "text", "options": "epsilon"}, "center": {"value": "True", "type": "str", "render": "list", "options": "bool"}, "scale": {"value": "True", "type": "str", "render": "list", "options": "bool"}, "beta_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "gamma_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "beta_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}, "gamma_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}, "renorm": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "renorm_clipping": {"value": "None", "type": "str", "render": "text", "options": "clipping"}, "renorm_momentum": {"value": "0.99", "type": "str", "render": "text", "options": "momentum"}, "fused": {"value": "None", "type": "str", "render": "text", "options": "fused"}, "trainable": {"value": "True", "type": "str", "render": "list", "options": "bool"}, "virtual_batch_size": {"value": "None", "type": "str", "render": "text", "options": "size"}, "adjustment": {"value": "None", "type": "str", "render": "text", "options": "adjustment"}, "name": {"value": "None", "type": "str", "render": "text", "options": "name"}}, "doc": "https://keras.io/api/layers/normalization_layers/batch_normalization", "id": "batchnormalization_1", "pos": {"x": 268, "y": 1375, "offsetX": 98, "offsetY": 23}, "connections": {"inbound": ["conv2d_1"], "outbound": ["activation_1"]}, "width": 200}, "activation_1": {"name": "Activation 1", "type": {"name": "Activation", "_class": "layers"}, "arguments": {"activation": {"value": "sigmoid", "type": "str", "render": "list", "options": "activation"}}, "doc": "https://keras.io/api/layers/core_layers/activation", "id": "activation_1", "pos": {"x": 309, "y": 1418, "offsetX": 58, "offsetY": 23}, "connections": {"inbound": ["batchnormalization_1"], "outbound": ["model_1"]}, "width": 120}, "model_1": {"name": "Model 1", "type": {"name": "Model", "_class": "models"}, "arguments": {}, "id": "model_1", "pos": {"x": 334, "y": 1494, "offsetX": 33, "offsetY": 23}, "connections": {"inbound": ["activation_1"], "outbound": ["compile_1"]}, "width": 70}, "compile_1": {"name": "Compile 1", "type": {"name": "Compile", "_class": "models"}, "arguments": {"optmizer": {"value": "None", "type": "str", "render": "list", "options": "optimizer"}, "loss": {"value": "mean_absolute_error", "type": "str", "render": "list", "options": "loss"}, "metrics": {"value": [], "type": "str", "render": "checkbox", "options": "metrics"}}, "id": "compile_1", "pos": {"x": 322, "y": 1536, "offsetX": 43, "offsetY": 23}, "connections": {"inbound": ["model_1", "adam_1"], "outbound": ["train_1"]}, "width": 90}, "train_1": {"name": "Train 1", "type": {"name": "Train", "_class": "models"}, "arguments": {"batch_size": {"value": "16", "type": "int", "render": "text", "options": "batch_size"}, "epochs": {"value": "1", "type": "int", "render": "text", "options": "batch_size"}}, "id": "train_1", "pos": {"x": 334, "y": 1581, "offsetX": 33, "offsetY": 23}, "connections": {"inbound": ["compile_1"], "outbound": []}, "width": 70}, "adam_1": {"name": "Adam 1", "type": {"name": "Adam", "_class": "optimizers"}, "arguments": {"learning_rate": {"value": "0.00009", "type": "str", "render": "text", "options": "rate"}, "beta_1": {"value": "0.9", "type": "str", "render": "text", "options": "1"}, "beta_2": {"value": "0.999", "type": "str", "render": "text", "options": "2"}, "epsilon": {"value": "1e-07", "type": "str", "render": "text", "options": "epsilon"}, "amsgrad": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "name": {"value": "Adam", "type": "str", "render": "text", "options": "name"}}, "id": "adam_1", "pos": {"x": 477, "y": 1483, "offsetX": 28, "offsetY": 23}, "connections": {"inbound": [], "outbound": ["compile_1"]}, "width": 60}}