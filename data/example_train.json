{'dataset_1': {'id': 'dataset_1', 'name': 'Dataset 1', 'type': {'_class': 'datasets', 'name': 'Dataset'}, 'pos': {'x': 21.800000000000004, 'y': 15, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': [], 'outbound': ['input_2']}, 'width': 90, 'arguments': {'dataset': {'value': '"""\nNote : Don\'t change dataset id.\n\nAll the required packages have been imported with their standard namespaces.\n\ntensorflow as tf\nkeras as keras\npandas as pd\nnumpy as np\n\nfrom sklearn.model_selection , train_test_split\n"""\n\n\n#dataset id=dataset_1\nclass Dataset:\n    """\n    Dataset will be used in training \n\n    The dataset object needs to have following attributes\n\n    train_x : np.ndarray -> Training features\n    train_y : np.ndarray -> Training labels \n    test_x : np.ndarray -> Testing features\n    test_y : np.ndarray -> Testing labels\n\n    validate : bool -> Weather use validation data or not\n\n    batch_size : int -> Batch size\n    epochs : int -> Number of epochs\n    batches : int -> Number of batches ( Will be calculated automatically )\n    """\n    train_x = None\n    test_x = None\n    train_y = None\n    test_y = None\n\n    validate = True\n\n    def __init__(self) -> None:\n        """\n        Load dataset and set required variables.\n        """\n\n        images = glob("C:\\\\workspace\\\\tensorflow-gui\\\\data\\\\datasets\\\\bfsiw\\\\leedsbutterfly\\\\images\\\\*")\n        labels = glob("C:\\\\workspace\\\\tensorflow-gui\\\\data\\\\datasets\\\\bfsiw\\\\leedsbutterfly\\\\segmentations\\\\*")\n\n    \n        self.train_x = np.zeros((len(images),224,224,3)).astype(np.float32)\n        self.train_y = np.zeros((len(labels),224,224,3)).astype(np.float32)\n\n        def get_image(args):\n            index,path,array = args\n            im = cv2.imread(path,)[:,:,::-1]\n            im = cv2.resize(im,(224,224),interpolation=cv2.INTER_AREA)\n            array[index] = im\n            return 1\n\n\n        with ThreadPoolExecutor(max_workers=32) as executor:\n            res = executor.map(get_image,[ ( i,path,self.train_x ) for i,path in enumerate(images)])\n            \n        with ThreadPoolExecutor(max_workers=32) as executor:\n            res = executor.map(get_image,[ ( i,path,self.train_y ) for i,path in enumerate(labels)])\n\n        self.train_y = self.train_y.mean(axis=-1) / 255\n        test_idx = np.random.randint(0,len(self.train_x),size=32)\n        \n        self.test_x = self.train_x[test_idx]\n        self.test_y = self.train_y[test_idx]\n\n        collect()\n        \n# Do not change the anything.\ndataset_1 = Dataset()\n#end-dataset id=dataset_1', 'type': 'dataset', 'render': 'dataset'}}}, 'input_2': {'id': 'input_2', 'name': 'Input 2', 'type': {'name': 'Input', '_class': 'layers'}, 'pos': {'x': 43.4, 'y': 77, 'offsetX': 40.6, 'offsetY': 5}, 'connections': {'inbound': ['dataset_1'], 'outbound': ['conv2d_6']}, 'width': 70, 'arguments': {'shape': {'value': '( 224, 224, 3 )', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'batch_size': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'size'}, 'name': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'name'}, 'dtype': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'dtype'}, 'sparse': {'value': 'False', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'tensor': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'tensor'}, 'ragged': {'value': 'False', 'type': 'str', 'render': 'list', 'options': 'bool'}}}, 'conv2d_6': {'id': 'conv2d_6', 'name': 'Conv2D 6', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 49.6, 'y': 137, 'offsetX': 46.4, 'offsetY': 5}, 'connections': {'inbound': ['input_2'], 'outbound': ['conv2d_7']}, 'width': 80, 'arguments': {'filters': {'value': '8', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_7': {'id': 'conv2d_7', 'name': 'Conv2D 7', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 51.6, 'y': 183, 'offsetX': 46.4, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_6'], 'outbound': ['dropout_1']}, 'width': 80, 'arguments': {'filters': {'value': '8', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_8': {'id': 'conv2d_8', 'name': 'Conv2D 8', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 248.6, 'y': 320, 'offsetX': 46.4, 'offsetY': 5}, 'connections': {'inbound': ['dropout_1'], 'outbound': ['conv2d_9']}, 'width': 80, 'arguments': {'filters': {'value': '16', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_9': {'id': 'conv2d_9', 'name': 'Conv2D 9', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 251.6, 'y': 361, 'offsetX': 46.4, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_8'], 'outbound': ['dropout_2']}, 'width': 80, 'arguments': {'filters': {'value': '16', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_10': {'id': 'conv2d_10', 'name': 'Conv2D 10', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 551.8, 'y': 529, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['dropout_2'], 'outbound': ['conv2d_11']}, 'width': 90, 'arguments': {'filters': {'value': '32', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_11': {'id': 'conv2d_11', 'name': 'Conv2D 11', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 554.8, 'y': 570, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_10'], 'outbound': ['dropout_3']}, 'width': 90, 'arguments': {'filters': {'value': '32', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_12': {'id': 'conv2d_12', 'name': 'Conv2D 12', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 813.8, 'y': 778, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['dropout_3'], 'outbound': ['conv2d_13']}, 'width': 90, 'arguments': {'filters': {'value': '64', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_13': {'id': 'conv2d_13', 'name': 'Conv2D 13', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 816.8, 'y': 822, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_12'], 'outbound': ['dropout_4']}, 'width': 90, 'arguments': {'filters': {'value': '64', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_14': {'id': 'conv2d_14', 'name': 'Conv2D 14', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 1114.8, 'y': 1005, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['dropout_4'], 'outbound': ['conv2d_15']}, 'width': 90, 'arguments': {'filters': {'value': '128', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2d_15': {'id': 'conv2d_15', 'name': 'Conv2D 15', 'type': {'name': 'Conv2D', '_class': 'layers'}, 'pos': {'x': 1115.8, 'y': 1050, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_14'], 'outbound': ['dropout_5']}, 'width': 90, 'arguments': {'filters': {'value': '128', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'groups': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'groups'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_1': {'id': 'conv2dtranspose_1', 'name': 'Conv2DTranspose 1', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 1089.4, 'y': 1147, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['dropout_5'], 'outbound': ['concatenate_3']}, 'width': 170, 'arguments': {'filters': {'value': '64', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_2': {'id': 'conv2dtranspose_2', 'name': 'Conv2DTranspose 2', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 815.4, 'y': 1340, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['concatenate_3'], 'outbound': ['conv2dtranspose_3']}, 'width': 170, 'arguments': {'filters': {'value': '64', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_3': {'id': 'conv2dtranspose_3', 'name': 'Conv2DTranspose 3', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 817.4, 'y': 1386, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_2'], 'outbound': ['dropout_6']}, 'width': 170, 'arguments': {'filters': {'value': '32', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_4': {'id': 'conv2dtranspose_4', 'name': 'Conv2DTranspose 4', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 602.4, 'y': 1560, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['concatenate_4'], 'outbound': ['conv2dtranspose_5']}, 'width': 170, 'arguments': {'filters': {'value': '32', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_5': {'id': 'conv2dtranspose_5', 'name': 'Conv2DTranspose 5', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 605.4, 'y': 1604, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_4'], 'outbound': ['dropout_7']}, 'width': 170, 'arguments': {'filters': {'value': '16', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_6': {'id': 'conv2dtranspose_6', 'name': 'Conv2DTranspose 6', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 375.4, 'y': 1787, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['concatenate_5'], 'outbound': ['conv2dtranspose_7']}, 'width': 170, 'arguments': {'filters': {'value': '16', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_7': {'id': 'conv2dtranspose_7', 'name': 'Conv2DTranspose 7', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 377.4, 'y': 1829, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_6'], 'outbound': ['dropout_8']}, 'width': 170, 'arguments': {'filters': {'value': '8', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_8': {'id': 'conv2dtranspose_8', 'name': 'Conv2DTranspose 8', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 182.4, 'y': 2055, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['concatenate_6'], 'outbound': ['conv2dtranspose_9']}, 'width': 170, 'arguments': {'filters': {'value': '8', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'conv2dtranspose_9': {'id': 'conv2dtranspose_9', 'name': 'Conv2DTranspose 9', 'type': {'name': 'Conv2DTranspose', '_class': 'layers'}, 'pos': {'x': 180.4, 'y': 2098, 'offsetX': 98.6, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_8'], 'outbound': ['dropout_9']}, 'width': 170, 'arguments': {'filters': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'filters'}, 'kernel_size': {'value': '3', 'type': 'str', 'render': 'text', 'options': 'size'}, 'padding': {'value': 'same', 'type': 'str', 'render': 'list', 'options': 'padding'}, 'strides': {'value': '2', 'type': 'str', 'render': 'text', 'options': 'strides'}, 'output_padding': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'padding'}, 'data_format': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'format'}, 'dilation_rate': {'value': '(1, 1)', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'activation': {'value': 'swish', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'dropout_1': {'id': 'dropout_1', 'name': 'Dropout 1', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 47.800000000000004, 'y': 229, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_7'], 'outbound': ['conv2d_8', 'concatenate_6']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'dropout_2': {'id': 'dropout_2', 'name': 'Dropout 2', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 250.8, 'y': 402, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_9'], 'outbound': ['conv2d_10', 'concatenate_5']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'dropout_3': {'id': 'dropout_3', 'name': 'Dropout 3', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 560.8, 'y': 616, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_11'], 'outbound': ['conv2d_12', 'concatenate_4']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'dropout_4': {'id': 'dropout_4', 'name': 'Dropout 4', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 820.8, 'y': 864, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_13'], 'outbound': ['conv2d_14', 'concatenate_3']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'dropout_5': {'id': 'dropout_5', 'name': 'Dropout 5', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 1121.8, 'y': 1099, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2d_15'], 'outbound': ['conv2dtranspose_1']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'dropout_6': {'id': 'dropout_6', 'name': 'Dropout 6', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 862.8, 'y': 1436, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_3'], 'outbound': ['concatenate_4']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'dropout_7': {'id': 'dropout_7', 'name': 'Dropout 7', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 652.8, 'y': 1649, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_5'], 'outbound': ['concatenate_5']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'dropout_8': {'id': 'dropout_8', 'name': 'Dropout 8', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 422.8, 'y': 1874, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_7'], 'outbound': ['concatenate_6']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'dropout_9': {'id': 'dropout_9', 'name': 'Dropout 9', 'type': {'name': 'Dropout', '_class': 'layers'}, 'pos': {'x': 224.8, 'y': 2147, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_9'], 'outbound': ['dense_1']}, 'width': 90, 'arguments': {'rate': {'value': '0.1', 'type': 'str', 'render': 'text', 'options': 'rate'}, 'noise_shape': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'shape'}, 'seed': {'value': 'None', 'type': 'str', 'render': 'text', 'options': 'None'}}}, 'concatenate_3': {'id': 'concatenate_3', 'name': 'Concatenate 3', 'type': {'name': 'Concatenate', '_class': 'layers'}, 'pos': {'x': 838.6, 'y': 1299, 'offsetX': 75.39999999999999, 'offsetY': 5}, 'connections': {'inbound': ['conv2dtranspose_1', 'dropout_4'], 'outbound': ['conv2dtranspose_2']}, 'width': 130, 'arguments': {}}, 'concatenate_4': {'id': 'concatenate_4', 'name': 'Concatenate 4', 'type': {'name': 'Concatenate', '_class': 'layers'}, 'pos': {'x': 626.6, 'y': 1520, 'offsetX': 75.39999999999999, 'offsetY': 5}, 'connections': {'inbound': ['dropout_6', 'dropout_3'], 'outbound': ['conv2dtranspose_4']}, 'width': 130, 'arguments': {}}, 'concatenate_5': {'id': 'concatenate_5', 'name': 'Concatenate 5', 'type': {'name': 'Concatenate', '_class': 'layers'}, 'pos': {'x': 398.6, 'y': 1745, 'offsetX': 75.39999999999999, 'offsetY': 5}, 'connections': {'inbound': ['dropout_7', 'dropout_2'], 'outbound': ['conv2dtranspose_6']}, 'width': 130, 'arguments': {}}, 'concatenate_6': {'id': 'concatenate_6', 'name': 'Concatenate 6', 'type': {'name': 'Concatenate', '_class': 'layers'}, 'pos': {'x': 207.60000000000002, 'y': 2009, 'offsetX': 75.39999999999999, 'offsetY': 5}, 'connections': {'inbound': ['dropout_8', 'dropout_1'], 'outbound': ['conv2dtranspose_8']}, 'width': 130, 'arguments': {}}, 'dense_1': {'id': 'dense_1', 'name': 'Dense 1', 'type': {'name': 'Dense', '_class': 'layers'}, 'pos': {'x': 247.16216216216216, 'y': 2245, 'offsetX': 40.6, 'offsetY': 5}, 'connections': {'inbound': ['dropout_9'], 'outbound': ['model_1']}, 'width': 70, 'arguments': {'units': {'value': '1', 'type': 'str', 'render': 'text', 'options': 'units'}, 'activation': {'value': 'sigmoid', 'type': 'str', 'render': 'list', 'options': 'activation'}, 'use_bias': {'value': 'True', 'type': 'str', 'render': 'list', 'options': 'bool'}, 'kernel_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'bias_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'activity_regularizer': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'regularizer'}, 'kernel_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}, 'bias_constraint': {'value': 'None', 'type': 'str', 'render': 'list', 'options': 'constraint'}}}, 'model_1': {'id': 'model_1', 'name': 'Model 1', 'type': {'name': 'Model', '_class': 'models'}, 'pos': {'x': 246.16216216216216, 'y': 2336, 'offsetX': 40.6, 'offsetY': 5}, 'connections': {'inbound': ['dense_1'], 'outbound': ['compile_1']}, 'width': 70, 'arguments': {}}, 'compile_1': {'id': 'compile_1', 'name': 'Compile 1', 'type': {'name': 'Compile', '_class': 'models'}, 'pos': {'x': 247.35135135135135, 'y': 2421, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['model_1'], 'outbound': ['train_1']}, 'width': 90, 'arguments': {'optmizer': {'value': 'adam', 'type': 'str', 'render': 'list', 'options': 'optimizer'}, 'loss': {'value': 'mean_squared_error', 'type': 'str', 'render': 'list', 'options': 'loss'}, 'metrics': {'value': ['binary_crossentropy', 'mean_absolute_error', 'mean_squared_error'], 'type': 'str', 'render': 'checkbox', 'options': 'metrics'}}}, 'train_1': {'id': 'train_1', 'name': 'Train 1', 'type': {'name': 'Train', '_class': 'models'}, 'pos': {'x': 277.1621621621622, 'y': 2480, 'offsetX': 40.6, 'offsetY': 5}, 'connections': {'inbound': ['compile_1'], 'outbound': []}, 'width': 70, 'arguments': {'batch_size': {'value': '8', 'type': 'int', 'render': 'text', 'options': 'batch_size'}, 'epochs': {'value': '10', 'type': 'int', 'render': 'text', 'options': 'batch_size'}}}, 'train_config': {'dataset': {'id': 'dataset_1', 'value': '"""\nNote : Don\'t change dataset id.\n\nAll the required packages have been imported with their standard namespaces.\n\ntensorflow as tf\nkeras as keras\npandas as pd\nnumpy as np\n\nfrom sklearn.model_selection , train_test_split\n"""\n\n\n#dataset id=dataset_1\nclass Dataset:\n    """\n    Dataset will be used in training \n\n    The dataset object needs to have following attributes\n\n    train_x : np.ndarray -> Training features\n    train_y : np.ndarray -> Training labels \n    test_x : np.ndarray -> Testing features\n    test_y : np.ndarray -> Testing labels\n\n    validate : bool -> Weather use validation data or not\n\n    batch_size : int -> Batch size\n    epochs : int -> Number of epochs\n    batches : int -> Number of batches ( Will be calculated automatically )\n    """\n    train_x = None\n    test_x = None\n    train_y = None\n    test_y = None\n\n    validate = True\n\n    def __init__(self) -> None:\n        """\n        Load dataset and set required variables.\n        """\n\n        images = glob("C:\\\\workspace\\\\tensorflow-gui\\\\data\\\\datasets\\\\bfsiw\\\\leedsbutterfly\\\\images\\\\*")\n        labels = glob("C:\\\\workspace\\\\tensorflow-gui\\\\data\\\\datasets\\\\bfsiw\\\\leedsbutterfly\\\\segmentations\\\\*")\n\n    \n        self.train_x = np.zeros((len(images),224,224,3)).astype(np.float32)\n        self.train_y = np.zeros((len(labels),224,224,3)).astype(np.float32)\n\n        def get_image(args):\n            index,path,array = args\n            im = cv2.imread(path,)[:,:,::-1]\n            im = cv2.resize(im,(224,224),interpolation=cv2.INTER_AREA)\n            array[index] = im\n            return 1\n\n\n        with ThreadPoolExecutor(max_workers=32) as executor:\n            res = executor.map(get_image,[ ( i,path,self.train_x ) for i,path in enumerate(images)])\n            \n        with ThreadPoolExecutor(max_workers=32) as executor:\n            res = executor.map(get_image,[ ( i,path,self.train_y ) for i,path in enumerate(labels)])\n\n        self.train_y = self.train_y.mean(axis=-1) / 255\n        test_idx = np.random.randint(0,len(self.train_x),size=32)\n        \n        self.test_x = self.train_x[test_idx]\n        self.test_y = self.train_y[test_idx]\n\n        collect()\n        \n# Do not change the anything.\ndataset_1 = Dataset()\n#end-dataset id=dataset_1'}, 'optimizer': None, 'loss': None, 'callbacks': [], 'model': {'id': 'model_1', 'name': 'Model 1', 'type': {'name': 'Model', '_class': 'models'}, 'pos': {'x': 246.16216216216216, 'y': 2336, 'offsetX': 40.6, 'offsetY': 5}, 'connections': {'inbound': ['dense_1'], 'outbound': ['compile_1']}, 'width': 70, 'arguments': {}}, 'compile': {'id': 'compile_1', 'name': 'Compile 1', 'type': {'name': 'Compile', '_class': 'models'}, 'pos': {'x': 247.35135135135135, 'y': 2421, 'offsetX': 52.199999999999996, 'offsetY': 5}, 'connections': {'inbound': ['model_1'], 'outbound': ['train_1']}, 'width': 90, 'arguments': {'optmizer': {'value': 'adam', 'type': 'str', 'render': 'list', 'options': 'optimizer'}, 'loss': {'value': 'mean_squared_error', 'type': 'str', 'render': 'list', 'options': 'loss'}, 'metrics': {'value': ['binary_crossentropy', 'mean_absolute_error', 'mean_squared_error'], 'type': 'str', 'render': 'checkbox', 'options': 'metrics'}}}, 'train': {'id': 'train_1', 'name': 'Train 1', 'type': {'name': 'Train', '_class': 'models'}, 'pos': {'x': 277.1621621621622, 'y': 2480, 'offsetX': 40.6, 'offsetY': 5}, 'connections': {'inbound': ['compile_1'], 'outbound': []}, 'width': 70, 'arguments': {'batch_size': {'value': '8', 'type': 'int', 'render': 'text', 'options': 'batch_size'}, 'epochs': {'value': '10', 'type': 'int', 'render': 'text', 'options': 'batch_size'}}}}, 'input_nodes': ['input_2'], 'levels': [['input_2'], ['conv2d_6'], ['conv2d_7'], ['dropout_1'], ['conv2d_8'], ['conv2d_9'], ['dropout_2'], ['conv2d_10'], ['conv2d_11'], ['dropout_3'], ['conv2d_12'], ['conv2d_13'], ['dropout_4'], ['conv2d_14'], ['conv2d_15'], ['dropout_5'], ['conv2dtranspose_1'], ['concatenate_3'], ['conv2dtranspose_2'], ['conv2dtranspose_3'], ['dropout_6'], ['concatenate_4'], ['conv2dtranspose_4'], ['conv2dtranspose_5'], ['dropout_7'], ['concatenate_5'], ['conv2dtranspose_6'], ['conv2dtranspose_7'], ['dropout_8'], ['concatenate_6'], ['conv2dtranspose_8'], ['conv2dtranspose_9'], ['dropout_9'], ['dense_1'], ['model_1'], ['compile_1'], ['train_1']]}