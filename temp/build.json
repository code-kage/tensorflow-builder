{"model_1": {"id": "model_1", "name": "Model 1", "type": {"name": "Model", "_class": "models"}, "pos": {"x": 401, "y": 684}, "connections": {"inbound": ["dense_2"], "outbound": ["compile_2"]}, "arguments": {}}, "modelcheckpoint_1": {"id": "modelcheckpoint_1", "name": "ModelCheckpoint 1", "type": {"name": "ModelCheckpoint", "_class": "callbacks"}, "pos": {"x": 855, "y": 615}, "connections": {"inbound": [], "outbound": ["train_2"]}, "arguments": {"filepath": {"value": "./temp/model", "type": "str", "render": "text", "options": "filepath"}, "monitor": {"value": "val_loss", "type": "str", "render": "text", "options": "monitor"}, "verbose": {"value": "0", "type": "str", "render": "text", "options": "verbose"}, "save_best_only": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "save_weights_only": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "mode": {"value": "auto", "type": "str", "render": "text", "options": "mode"}, "save_freq": {"value": "epoch", "type": "str", "render": "text", "options": "freq"}, "options": {"value": "None", "type": "str", "render": "text", "options": "options"}}}, "tensorboard_1": {"id": "tensorboard_1", "name": "TensorBoard 1", "type": {"name": "TensorBoard", "_class": "callbacks"}, "pos": {"x": 1059, "y": 617}, "connections": {"inbound": [], "outbound": ["train_2"]}, "arguments": {"log_dir": {"value": "./temp/logs", "type": "str", "render": "text", "options": "dir"}, "histogram_freq": {"value": "0", "type": "str", "render": "text", "options": "freq"}, "write_graph": {"value": "True", "type": "str", "render": "list", "options": "bool"}, "write_images": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "update_freq": {"value": "epoch", "type": "str", "render": "text", "options": "freq"}, "profile_batch": {"value": "2", "type": "str", "render": "text", "options": "batch"}, "embeddings_freq": {"value": "0", "type": "str", "render": "text", "options": "freq"}, "embeddings_metadata": {"value": "None", "type": "str", "render": "text", "options": "metadata"}}}, "adam_1": {"id": "adam_1", "name": "Adam 1", "type": {"name": "Adam", "_class": "optimizers"}, "pos": {"x": 647, "y": 575}, "connections": {"inbound": [], "outbound": ["compile_2"]}, "arguments": {"learning_rate": {"value": "0.001", "type": "str", "render": "text", "options": "rate"}, "beta_1": {"value": "0.9", "type": "str", "render": "text", "options": "1"}, "beta_2": {"value": "0.999", "type": "str", "render": "text", "options": "2"}, "epsilon": {"value": "1e-07", "type": "str", "render": "text", "options": "epsilon"}, "amsgrad": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "name": {"value": "Adam", "type": "str", "render": "text", "options": "name"}}}, "dense_2": {"id": "dense_2", "name": "Dense 2", "type": {"name": "Dense", "_class": "layers"}, "pos": {"x": 355, "y": 589}, "connections": {"inbound": ["globalaveragepooling2d_2"], "outbound": ["model_1"]}, "arguments": {"units": {"value": "10", "type": "str", "render": "text", "options": "units"}, "activation": {"value": "softmax", "type": "str", "render": "list", "options": "activation"}, "use_bias": {"value": "True", "type": "str", "render": "list", "options": "bool"}, "kernel_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "bias_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "activity_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "kernel_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}, "bias_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}}}, "globalaveragepooling2d_2": {"id": "globalaveragepooling2d_2", "name": "GlobalAveragePooling2D 2", "type": {"name": "GlobalAveragePooling2D", "_class": "layers"}, "pos": {"x": 301, "y": 478}, "connections": {"inbound": ["conv2d_3"], "outbound": ["dense_2"]}, "arguments": {"data_format": {"value": "None", "type": "str", "render": "text", "options": "format"}}}, "conv2d_3": {"id": "conv2d_3", "name": "Conv2D 3", "type": {"name": "Conv2D", "_class": "layers"}, "pos": {"x": 361, "y": 382}, "connections": {"inbound": ["conv2d_4"], "outbound": ["globalaveragepooling2d_2"]}, "arguments": {"filters": {"value": "64", "type": "str", "render": "text", "options": "filters"}, "kernel_size": {"value": "3", "type": "str", "render": "text", "options": "size"}, "strides": {"value": "2", "type": "str", "render": "text", "options": "strides"}, "data_format": {"value": "None", "type": "str", "render": "text", "options": "format"}, "dilation_rate": {"value": "(1, 1)", "type": "str", "render": "text", "options": "rate"}, "groups": {"value": "1", "type": "str", "render": "text", "options": "groups"}, "activation": {"value": "relu", "type": "str", "render": "list", "options": "activation"}, "use_bias": {"value": "True", "type": "str", "render": "list", "options": "bool"}, "kernel_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "bias_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "activity_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "kernel_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}, "bias_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}}}, "conv2d_4": {"id": "conv2d_4", "name": "Conv2D 4", "type": {"name": "Conv2D", "_class": "layers"}, "pos": {"x": 338, "y": 275}, "connections": {"inbound": ["input_3"], "outbound": ["conv2d_3"]}, "arguments": {"filters": {"value": "32", "type": "str", "render": "text", "options": "filters"}, "kernel_size": {"value": "3", "type": "str", "render": "text", "options": "size"}, "strides": {"value": "2", "type": "str", "render": "text", "options": "strides"}, "data_format": {"value": "None", "type": "str", "render": "text", "options": "format"}, "dilation_rate": {"value": "(1, 1)", "type": "str", "render": "text", "options": "rate"}, "groups": {"value": "1", "type": "str", "render": "text", "options": "groups"}, "activation": {"value": "relu", "type": "str", "render": "list", "options": "activation"}, "use_bias": {"value": "True", "type": "str", "render": "list", "options": "bool"}, "kernel_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "bias_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "activity_regularizer": {"value": "None", "type": "str", "render": "list", "options": "regularizer"}, "kernel_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}, "bias_constraint": {"value": "None", "type": "str", "render": "list", "options": "constraint"}}}, "input_3": {"id": "input_3", "name": "Input 3", "type": {"name": "Input", "_class": "layers"}, "pos": {"x": 299, "y": 149}, "connections": {"inbound": ["mnist_2"], "outbound": ["conv2d_4"]}, "arguments": {"shape": {"value": "( 28, 28, 1) ", "type": "str", "render": "text", "options": "shape"}, "batch_size": {"value": "None", "type": "str", "render": "text", "options": "size"}, "name": {"value": "None", "type": "str", "render": "text", "options": "name"}, "dtype": {"value": "None", "type": "str", "render": "text", "options": "dtype"}, "sparse": {"value": "False", "type": "str", "render": "list", "options": "bool"}, "tensor": {"value": "None", "type": "str", "render": "text", "options": "tensor"}, "ragged": {"value": "False", "type": "str", "render": "list", "options": "bool"}}}, "mnist_2": {"id": "mnist_2", "name": "MNIST 2", "type": {"_class": "datasets", "name": "Dataset"}, "pos": {"x": 293, "y": 30}, "connections": {"inbound": [], "outbound": ["input_3"]}, "arguments": {"dataset": {"value": "\"\"\"\nNote : Don't change dataset id.\nAll the required packages have been imported with their standard namespaces.\n\ntensorflow as tf\nkeras as keras\npandas as pd\nnumpy as np\n\nfrom sklearn.model_selection , train_test_split\n\"\"\"\n\n#dataset id=mnist_2\nclass Dataset:\n    \"\"\"\n    Dataset will be used in training \n\n    The dataset object needs to have following attributes\n\n    train_x : np.ndarray -> Training features\n    train_y : np.ndarray -> Training labels \n    test_x : np.ndarray -> Testing features\n    test_y : np.ndarray -> Testing labels\n\n    validate : bool -> Weather use validation data or not\n\n    batch_size : int -> Batch size\n    epochs : int -> Number of epochs\n    batches : int -> Number of batches ( Will be calculated automatically )\n    \"\"\"\n    train_x = None\n    test_x = None\n    train_y = None\n    test_y = None\n\n    validate = True\n\n    def __init__(self) -> None:\n        \"\"\"\n        Load dataset and set required variables.\n        \"\"\"\n\n        (X,Y),(x,y) = keras.datasets.mnist.load_data()\n\n        self.train_x = X.reshape(-1,28, 28, 1) / 255\n        self.train_y = keras.utils.to_categorical(Y)\n        self.test_x = X.reshape(-1,28, 28, 1) / 255\n        self.test_y = keras.utils.to_categorical(Y)\n    \n# Do not change the anything.\nmnist_2 = Dataset()\n#end-dataset id=mnist_2\n                    ", "type": "dataset", "render": "dataset"}}}, "compile_2": {"id": "compile_2", "name": "Compile 2", "type": {"name": "Compile", "_class": "models"}, "pos": {"x": 546, "y": 771}, "connections": {"inbound": ["model_1", "adam_1"], "outbound": ["train_2"]}, "arguments": {"optmizer": {"value": "None", "type": "str", "render": "list", "options": "optimizer"}, "loss": {"value": "categorical_crossentropy", "type": "str", "render": "list", "options": "loss"}, "metrics": {"value": ["categorical_accuracy", "categorical_crossentropy"], "type": "str", "render": "checkbox", "options": "metrics"}}}, "train_2": {"id": "train_2", "name": "Train 2", "type": {"name": "Train", "_class": "models"}, "pos": {"x": 749, "y": 843}, "connections": {"inbound": ["modelcheckpoint_1", "tensorboard_1", "compile_2"], "outbound": []}, "arguments": {"batch_size": {"value": "32", "type": "int", "render": "text", "options": "batch_size"}, "epochs": {"value": "3", "type": "int", "render": "text", "options": "batch_size"}}}}